memberSearchIndex = [{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"accumulateXY(double[], double, double)","u":"accumulateXY(double[],double,double)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"activate()"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.NullReplacingDouble","l":"adapt(Attribute, double)","u":"adapt(org.postgresql.pljava.model.Attribute,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.AsOptional","l":"adapt(Attribute, T)","u":"adapt(org.postgresql.pljava.model.Attribute,T)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.Identity","l":"adapt(Attribute, T)","u":"adapt(org.postgresql.pljava.model.Attribute,T)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"add(ComplexScalar, ComplexScalar)","u":"add(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"add(ComplexScalar, double)","u":"add(org.postgresql.pljava.example.annotation.ComplexScalar,double)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"additionalChecks(RegProcedure<?>, ProceduralLanguage.PLJavaBased, boolean)","u":"additionalChecks(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased,boolean)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"additionalTriggerChecks(RegProcedure<Trigger.ForTrigger>, ProceduralLanguage.PLJavaBased, boolean)","u":"additionalTriggerChecks(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addNumbers(short, int, long, BigDecimal, BigDecimal, float, double)","u":"addNumbers(short,int,long,java.math.BigDecimal,java.math.BigDecimal,float,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOne(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOne(Integer)","u":"addOne(java.lang.Integer)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"addOneLong(long)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"afterUsernameInsert(TriggerData)","u":"afterUsernameInsert(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"afterUsernameUpdate(TriggerData)","u":"afterUsernameUpdate(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"allowFragment(DOMResult)","u":"allowFragment(javax.xml.transform.dom.DOMResult)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface","l":"answer()"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"AnyTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"applyAdjustments(ResultSet, T)","u":"applyAdjustments(java.sql.ResultSet,T)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"assertHasValues(ComplexScalar, double, double)","u":"assertHasValues(org.postgresql.pljava.example.annotation.ComplexScalar,double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"assertHasValues(ComplexTuple, double, double)","u":"assertHasValues(org.postgresql.pljava.example.annotation.ComplexTuple,double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"assertHasValues(Point, double, double)","u":"assertHasValues(org.postgresql.pljava.example.annotation.Point,double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"assignRowValues(ResultSet, int)","u":"assignRowValues(java.sql.ResultSet,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"CharsetEncodings","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"Modules","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"assignRowValues(ResultSet, long)","u":"assignRowValues(java.sql.ResultSet,long)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B","l":"B()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"BinaryColumnTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"boolOneOut(ResultSet)","u":"boolOneOut(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"bounceXMLParameter_(SQLXML)","u":"bounceXMLParameter_(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"bounceXMLParameter(SQLXML)","u":"bounceXMLParameter(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B.C","l":"C()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"callMetaDataMethod(String)","u":"callMetaDataMethod(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.NullReplacingDouble","l":"canFetchNull()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"castTextXML(SQLXML)","u":"castTextXML(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"CatalogObjects","l":"catalogClasses()"},{"p":"org.postgresql.pljava.example.annotation","c":"CatalogObjects","l":"catalogIntrospect(CatalogObject, CatalogObject)","u":"catalogIntrospect(org.postgresql.pljava.model.CatalogObject,org.postgresql.pljava.model.CatalogObject)"},{"p":"org.postgresql.pljava.example.annotation","c":"CatalogObjects","l":"catalogInval()"},{"p":"org.postgresql.pljava.example.annotation","c":"CatalogObjects","l":"CatalogObjects()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"CharsetEncodings","l":"CharsetEncodings()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"CharsetEncodings","l":"charsets()"},{"p":"org.postgresql.pljava.example.annotation","c":"CharsetEncodings","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"Modules","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"close()"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"close()"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"close()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"close()"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"close()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"close()"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"close()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"close()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"close()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"close()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"cmpMagnitude(ComplexScalar, ComplexScalar)","u":"cmpMagnitude(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"compile(String)","u":"compile(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PGF1010962","l":"complexParam(ResultSet[])","u":"complexParam(java.sql.ResultSet[])"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"ComplexScalar()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"ComplexScalar(double, double, String)","u":"%3Cinit%3E(double,double,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"ComplexTuple()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"componentsEQ(ComplexScalar, ComplexScalar)","u":"componentsEQ(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"count(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"countNulls(Integer[])","u":"countNulls(java.lang.Integer[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"countNulls(ResultSet)","u":"countNulls(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"createIterator(int)"},{"p":"org.postgresql.pljava.example","c":"Security","l":"createTempFile()"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"disallow44(TriggerData)","u":"disallow44(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.polyglot","c":"DispatcherSQL","l":"DispatcherSQL()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.polyglot","c":"DoSQL","l":"DoSQL(ProceduralLanguage)","u":"%3Cinit%3E(org.postgresql.pljava.model.ProceduralLanguage)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"echoXMLParameter_(SQLXML, int, int)","u":"echoXMLParameter_(java.sql.SQLXML,int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"echoXMLParameter(SQLXML, int, int)","u":"echoXMLParameter(java.sql.SQLXML,int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"ensureClosed(Result, SQLXML, int)","u":"ensureClosed(javax.xml.transform.Result,java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"Enumeration()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"eqToReal(ComplexScalar, double)","u":"eqToReal(org.postgresql.pljava.example.annotation.ComplexScalar,double)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"essentialChecks(RegProcedure<?>, ProceduralLanguage.PLJavaBased, boolean)","u":"essentialChecks(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased,boolean)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"essentialTransformChecks(Transform)","u":"essentialTransformChecks(org.postgresql.pljava.model.Transform)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"essentialTriggerChecks(RegProcedure<Trigger.ForTrigger>, ProceduralLanguage.PLJavaBased, boolean)","u":"essentialTriggerChecks(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"examineRows(TriggerData)","u":"examineRows(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.polyglot","c":"DoSQL","l":"execute(String, boolean)","u":"execute(java.lang.String,boolean)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"execute(String, boolean)","u":"execute(java.lang.String,boolean)"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"executeSelect(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"executeSelect(String)","u":"executeSelect(java.lang.String)"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"executeSelect(String)","u":"executeSelect(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.AsOptional","l":"fetchNull(Attribute)","u":"fetchNull(org.postgresql.pljava.model.Attribute)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest.NullReplacingDouble","l":"fetchNull(Attribute)","u":"fetchNull(org.postgresql.pljava.model.Attribute)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishAvgX(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishAvgY(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishIntercept(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishRegr(double[], ResultSet)","u":"finishRegr(double[],java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"finishSlope(double[])"},{"p":"org.postgresql.pljava.example","c":"Threads","l":"forceDeadlock()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"free()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"free()"},{"p":"org.postgresql.pljava.example","c":"BinaryColumnTest","l":"getBinaryPairs()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getCharacterStream()"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"getDatabaseMetaDataBooleans()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"getDatabaseMetaDataInts()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"getDatabaseMetaDataStrings()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getDate()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"getDateAsString()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingPropertiesAsScalarSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsScalarSet","l":"getProperties()"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"getResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"getResultSet()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"getResultSet()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"getResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getSource(Class<T>)","u":"getSource(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getSource(Class<T>)","u":"getSource(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"getSQLTypeName()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"getString()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"getString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getTime()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"getTimeAsString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"getTimestamp()"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"Glot64(ProceduralLanguage)","u":"%3Cinit%3E(org.postgresql.pljava.model.ProceduralLanguage)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"hasNext()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOneOut()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOneOutTable()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloOutParams(ResultSet)","u":"helloOutParams(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"helloTable()"},{"p":"org.postgresql.pljava.example","c":"HugeResultSet","l":"HugeResultSet(int)","u":"%3Cinit%3E(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"insertUsername(TriggerData)","u":"insertUsername(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"insertUsername(TriggerData)","u":"insertUsername(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"inStringoutXML(String)","u":"inStringoutXML(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"IntWithMod()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"inXMLoutString(SQLXML)","u":"inXMLoutString(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"PreJSR310","l":"issue199()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"issue228()"},{"p":"org.postgresql.pljava.example.annotation","c":"CharsetEncodings","l":"java_charsets(boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Modules","l":"java_modules()"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest","l":"javaMultiArrayTest()"},{"p":"org.postgresql.pljava.example.annotation","c":"JDBC42_21","l":"javaSpecificationGE(String)","u":"javaSpecificationGE(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"JDBC42_21","l":"JDBC42_21()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"leakStatements(TriggerData)","u":"leakStatements(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"like_regex(String, String, String, boolean)","u":"like_regex(java.lang.String,java.lang.String,java.lang.String,boolean)"},{"p":"org.postgresql.pljava.example","c":"Users","l":"listNonSupers()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"listSupers()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"logAndReturn(ComplexScalar)","u":"logAndReturn(org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"logAndReturn(ComplexTuple)","u":"logAndReturn(org.postgresql.pljava.example.annotation.ComplexTuple)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"logAndReturn(Point)","u":"logAndReturn(org.postgresql.pljava.example.annotation.Point)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"logAny(Object)","u":"logAny(java.lang.Object)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"logAnyElement(Object)","u":"logAnyElement(java.lang.Object)"},{"p":"org.postgresql.pljava.example","c":"LoggerTest","l":"LoggerTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"LoggerTest","l":"logMessage(String, String)","u":"logMessage(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho_(SQLXML, int, ResultSet)","u":"lowLevelXMLEcho_(java.sql.SQLXML,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho(SQLXML, int, ResultSet)","u":"lowLevelXMLEcho(java.sql.SQLXML,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"lowLevelXMLEcho(String)","u":"lowLevelXMLEcho(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"magnitudeLT(ComplexScalar, ComplexScalar)","u":"magnitudeLT(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"AnyTest","l":"makeArray(Object)","u":"makeArray(java.lang.Object)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"makeString(ResultSet)","u":"makeString(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"maxFromSetReturnExample(int, int)","u":"maxFromSetReturnExample(int,int)"},{"p":"org.postgresql.pljava.example","c":"MetaDataBooleans","l":"MetaDataBooleans()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataInts","l":"MetaDataInts()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataStrings","l":"MetaDataStrings()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"MetaDataTest","l":"MetaDataTest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"minMagnitude(ComplexScalar, ComplexScalar)","u":"minMagnitude(org.postgresql.pljava.example.annotation.ComplexScalar,org.postgresql.pljava.example.annotation.ComplexScalar)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"mockedXMLEcho(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"mockedXMLEcho(String)","u":"mockedXMLEcho(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modApply(IntWithMod, int, boolean)","u":"modApply(org.postgresql.pljava.example.annotation.IntWithMod,int,boolean)"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"moddatetime(TriggerData)","u":"moddatetime(org.postgresql.pljava.TriggerData)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest","l":"modelToJDBC(String, String[])","u":"modelToJDBC(java.lang.String,java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modIn(String[])","u":"modIn(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"modOut(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"moodsToTexts(String[])","u":"moodsToTexts(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"moodToText(String)","u":"moodToText(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B.C","l":"moreNestedAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.A","l":"nestedAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"OnInterface.B","l":"nestedClassAnswer()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"nestedStatements(int)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"next()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"nonSetArrayResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"nonSetCoercedResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"nonSetCompositeResult(ResultSet)","u":"nonSetCompositeResult(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"nonSetCompositeUDTResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"nonSetFixedUDTResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"notOutParams(ResultSet)","u":"notOutParams(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"nullOnEven(int)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"occurrences_regex(String, String, String, int, boolean, boolean)","u":"occurrences_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"paramDefaultsNamedRow(ResultSet)","u":"paramDefaultsNamedRow(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"RecordParameterDefaults","l":"paramDefaultsRecord(ResultSet)","u":"paramDefaultsRecord(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"Parameters()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"parse(String, String)","u":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"parse(String, String)","u":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"parse(String, String)","u":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"parse(String, String)","u":"parse(java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"passivate()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"PassXML()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PGF1010962","l":"PGF1010962()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"XMLRenderedTypes","l":"pgNodeTreeAsXML(SQLXML)","u":"pgNodeTreeAsXML(java.sql.SQLXML)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"Point()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"position_regex(String, String, String, int, boolean, boolean, int, int, boolean)","u":"position_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean,int,int,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"PreJSR310","l":"PreJSR310()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"prepare(RegProcedure<?>, ProceduralLanguage.PLJavaBased)","u":"prepare(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased)"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"preparedStatementContext()"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"prepareSRF(RegProcedure<?>, ProceduralLanguage.PLJavaBased)","u":"prepareSRF(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased)"},{"p":"org.postgresql.pljava.example.polyglot","c":"Glot64","l":"prepareTrigger(RegProcedure<Trigger.ForTrigger>, ProceduralLanguage.PLJavaBased)","u":"prepareTrigger(org.postgresql.pljava.model.RegProcedure,org.postgresql.pljava.model.ProceduralLanguage.PLJavaBased)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLSchema(String, SQLXML, String, int)","u":"prepareXMLSchema(java.lang.String,java.sql.SQLXML,java.lang.String,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLTransform(String, SQLXML, int, boolean, boolean, ResultSet)","u":"prepareXMLTransform(java.lang.String,java.sql.SQLXML,int,boolean,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"prepareXMLTransformWithJava(String, SQLXML, int, boolean, boolean, ResultSet)","u":"prepareXMLTransformWithJava(java.lang.String,java.sql.SQLXML,int,boolean,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"ConditionalDDR","l":"presentOnClassPath(String[])","u":"presentOnClassPath(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(byte)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Date)","u":"print(java.sql.Date)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(float)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(float[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(int[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Integer[])","u":"print(java.lang.Integer[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(long)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(long[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(short)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(short[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Time)","u":"print(java.sql.Time)"},{"p":"org.postgresql.pljava.example.annotation","c":"Parameters","l":"print(Timestamp)","u":"print(java.sql.Timestamp)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"propertyExampleAnno()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"propertyExampleRB()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"proxiedXMLEcho(SQLXML, int)","u":"proxiedXMLEcho(java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"RandomInts(int)","u":"%3Cinit%3E(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"readSQL(SQLInput, String)","u":"readSQL(java.sql.SQLInput,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"registerTransactionListener()"},{"p":"org.postgresql.pljava.example","c":"RandomInts","l":"remove()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"remove()"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"removeXY(double[], double, double)","u":"removeXY(double[],double,double)"},{"p":"org.postgresql.pljava.example","c":"ResultSetTest","l":"ResultSetTest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ReturnComposite","l":"ReturnComposite()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"TypeRoundTripper","l":"roundTrip(ResultSet, String, boolean, ResultSet)","u":"roundTrip(java.sql.ResultSet,java.lang.String,boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"run()"},{"p":"org.postgresql.pljava.example","c":"Security","l":"Security()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setBinaryStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setCharacterStream()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"setCompositeResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"MemoryContexts","l":"setNonCompositeResult()"},{"p":"org.postgresql.pljava.example.annotation","c":"SetOfRecordTest","l":"SetOfRecordTest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"setParameter()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setResult(Class<T>)","u":"setResult(java.lang.Class)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setResult(Class<T>)","u":"setResult(java.lang.Class)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"setReturn(int, int)","u":"setReturn(int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"setString(String)","u":"setString(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"setString(String)","u":"setString(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"SPIActions()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"SQLXMLMock(byte[])","u":"%3Cinit%3E(byte[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLMock","l":"SQLXMLMock(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML.SQLXMLProxy","l":"SQLXMLProxy(SQLXML, int)","u":"%3Cinit%3E(java.sql.SQLXML,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"stashResultSet()"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"strictlyNestedTest()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"substring_regex(String, String, String, int, boolean, int, int, boolean)","u":"substring_regex(java.lang.String,java.lang.String,java.lang.String,int,boolean,int,int,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Aggregates","l":"sum(double, double)","u":"sum(double,double)"},{"p":"org.postgresql.pljava.example.annotation","c":"Variadic","l":"sumOfSquares(double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Variadic","l":"sumOfSquaresBoxed(Double[])","u":"sumOfSquaresBoxed(java.lang.Double[])"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest","l":"targetListTest()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"testSavepointSanity()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"testTransactionRecovery()"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"textsToMoods(String[])","u":"textsToMoods(java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"Enumeration","l":"textToMood(String)","u":"textToMood(java.lang.String)"},{"p":"org.postgresql.pljava.example","c":"Threads","l":"Threads()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ThreadTest","l":"ThreadTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"toString()"},{"p":"org.postgresql.pljava.example.annotation","c":"SPIActions","l":"transferPeopleWithSalary(int)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"transformXML(String, SQLXML, int, int, ResultSet, Boolean, Integer)","u":"transformXML(java.lang.String,java.sql.SQLXML,int,int,java.sql.ResultSet,java.lang.Boolean,java.lang.Integer)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"translate_regex(String, String, String, String, int, boolean, int, boolean)","u":"translate_regex(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,int,boolean)"},{"p":"org.postgresql.pljava.example.annotation","c":"Triggers","l":"Triggers()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"Triggers","l":"Triggers()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"TupleReturn(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"tupleReturn(int, int, ResultSet)","u":"tupleReturn(int,int,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example","c":"TupleReturn","l":"tupleReturn(Integer, Integer, ResultSet)","u":"tupleReturn(java.lang.Integer,java.lang.Integer,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest","l":"TupleTableSlotTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"TupleTableSlotTest","l":"tupleTableSlotTest(String, String, String)","u":"tupleTableSlotTest(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"UDTScalarIOTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"unclosedSQLXML(int, int)","u":"unclosedSQLXML(int,int)"},{"p":"org.postgresql.pljava.example.annotation","c":"UnicodeRoundTripTest","l":"UnicodeRoundTripTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"UnicodeRoundTripTest","l":"unicodetest(String, int[], ResultSet)","u":"unicodetest(java.lang.String,int[],java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"Holdability","l":"unstashResultSet()"},{"p":"org.postgresql.pljava.example","c":"Users","l":"Users(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingProperties","l":"UsingProperties()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"UsingProperties","l":"UsingProperties(ObjectPool<UsingProperties>)","u":"%3Cinit%3E(org.postgresql.pljava.ObjectPool)"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsResultSet","l":"UsingPropertiesAsResultSet()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"UsingPropertiesAsScalarSet","l":"UsingPropertiesAsScalarSet()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example","c":"UsingPropertiesAsScalarSet","l":"UsingPropertiesAsScalarSet()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"VarlenaUDTTest()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexScalar","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"ComplexTuple","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"IntWithMod","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"Point","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"UDTScalarIOTest","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.annotation","c":"VarlenaUDTTest","l":"writeSQL(SQLOutput)","u":"writeSQL(java.sql.SQLOutput)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmlcast(ResultSet, Boolean, ResultSet)","u":"xmlcast(java.sql.ResultSet,java.lang.Boolean,java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmlexists(String, ResultSet, String[])","u":"xmlexists(java.lang.String,java.sql.ResultSet,java.lang.String[])"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlFromComposite()"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlInStmtAndRS(ResultSet)","u":"xmlInStmtAndRS(java.sql.ResultSet)"},{"p":"org.postgresql.pljava.example.annotation","c":"XMLRenderedTypes","l":"XMLRenderedTypes()","u":"%3Cinit%3E()"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmltable(String, String[], ResultSet, String[], Boolean)","u":"xmltable(java.lang.String,java.lang.String[],java.sql.ResultSet,java.lang.String[],java.lang.Boolean)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xmltext(String)","u":"xmltext(java.lang.String)"},{"p":"org.postgresql.pljava.example.annotation","c":"PassXML","l":"xmlTextNode(byte[], String, int, boolean)","u":"xmlTextNode(byte[],java.lang.String,int,boolean)"},{"p":"org.postgresql.pljava.example.saxon","c":"S9","l":"xq_ret_content(String, Boolean, ResultSet, String[])","u":"xq_ret_content(java.lang.String,java.lang.Boolean,java.sql.ResultSet,java.lang.String[])"}];updateSearchResults();